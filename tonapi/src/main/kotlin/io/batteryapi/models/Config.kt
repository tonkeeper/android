/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.batteryapi.models

import io.batteryapi.models.ConfigGasProxyInner
import io.batteryapi.models.ConfigMeanPrices

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param chargeCost cost of 1 charge in TON
 * @param fundReceiver with zero balance it is possible to transfer some jettons (stablecoins, jusdt, etc) to this address to refill the balance. Such transfers would be paid by Battery Service.
 * @param excessAccount when building a message to transfer an NFT or Jetton, use this address to send excess funds back to Battery Service.
 * @param messageTtl ttl for message in seconds
 * @param gasProxy 
 * @param meanPrices 
 */


data class Config (

    /* cost of 1 charge in TON */
    @Json(name = "charge_cost")
    val chargeCost: kotlin.String,

    /* with zero balance it is possible to transfer some jettons (stablecoins, jusdt, etc) to this address to refill the balance. Such transfers would be paid by Battery Service. */
    @Json(name = "fund_receiver")
    val fundReceiver: kotlin.String,

    /* when building a message to transfer an NFT or Jetton, use this address to send excess funds back to Battery Service. */
    @Json(name = "excess_account")
    val excessAccount: kotlin.String,

    /* ttl for message in seconds */
    @Json(name = "message_ttl")
    val messageTtl: kotlin.Int,

    @Json(name = "gas_proxy")
    val gasProxy: kotlin.collections.List<ConfigGasProxyInner>,

    @Json(name = "mean_prices")
    val meanPrices: ConfigMeanPrices

) {


}

